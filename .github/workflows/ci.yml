name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Install Playwright browsers
        run: playwright install --with-deps ${{ matrix.browser }}
        
      - name: Run code quality checks
        run: |
          python -m black --check src tests
          python -m isort --check-only src tests
          python -m flake8 src tests
          python -m mypy src tests
          
      - name: Run UI tests
        run: |
          python -m pytest tests/ui/ -m ui --browser=${{ matrix.browser }} -v
        env:
          BROWSER_HEADLESS: "true"
          TEST_TIMEOUT: "30000"
          
      - name: Run API tests
        run: |
          python -m pytest tests/api/ -m api -v
        env:
          TEST_TIMEOUT: "30000"
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            screenshots/
            videos/
            test-results/
          retention-days: 30